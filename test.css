/* --------------------- */
/* Custom properties */
/* --------------------- */

:root {
    /* colors */
    --clr-dark: 230 35% 7%;
    --clr-light: 231 77% 90%;
    --clr-white: 0 0% 100%;

    /* font-sizes */
    --fs-900: clamp(5rem, 8vw + 1rem, 9.375rem);
    --fs-800: 3.5rem;
    --fs-700: 1.5rem;
    --fs-600: 1rem;
    --fs-500: 1.75rem;
    --fs-400: 0.9375rem;
    --fs-300: 1rem;
    --fs-200: 0.875rem;

    /* font-families */
    --ff-serif: "Bellefair", serif;
    --ff-sans-cond: "Barlow Condensed", sans-serif;
    --ff-sans-normal: "Barlow", sans-serif;
}

@media (min-width: 35em) {
    :root {
        --fs-800: 5rem;
        --fs-700: 2.5rem;
        --fs-600: 1.5rem;
        --fs-400: 1rem;
    }
}

@media (min-width: 45em) {
    :root {
        /* fonts-sizes */
        --fs-800: 6.25rem;
        --fs-700: 3.5rem;
        --fs-600: 2rem;
        --fs-400: 1.125rem;
    }
}

/* --------------------- */
/* Reset */
/* --------------------- */

/* Box sizing */

*,
*::before,
*::after {
    box-sizing: border-box;
}

/* Reset margins */
body,
h1,
h2,
h3,
h4,
h5,
h6,
p,
figure,
picture {
    margin: 0;
}

h1,
h2,
h3,
h4,
h5,
h6,
p {
    font-weight: 400;
}

/* set up the body */
body {
    font-family: var(--ff-sans-normal);
    font-size: var(--fs-400);
    color: hsl( var(--clr-white) );
    background-color: hsl( var(--clr-dark) );
    line-height: 1.5;
    min-height: 100vh;

    /* centers it vertically on the screen */
    display: grid;
    /* moves it back up to the top */
    grid-template-rows: min-content 1fr;

    overflow-x: hidden;
}

/* make images easier to work with */
img,
picture {
    max-width: 100%;
    display: block;
}

/* Make form elements easier to work with */
input,
button,
textarea,
select {
    font: inherit;
}

/* Remove animations for poeople whu have turned them off */
@media (prefers-reduced-motion: reduce) {
    *,
    *::before,
    *::after {
      animation-duration: 0.01ms !important;
      animation-iteration-count: 1 !important;
      transition-duration: 0.01ms !important;
      scroll-behavior: auto !important;
    }
  }

/* --------------------- */
/* Utillity classes */
/* --------------------- */

.flex {
    display: flex;
    gap: var(--gap, 1rem);
}

.grid {
    display: grid;
    gap: var(--gap, 1rem);
}

.d-block {
    display: block;
}

/* "> * + *" applies it to all child elements that has a sibling before them. */
/* used to make the spacing even */
/* "> *:not(:first-child)" would do the same thing but with more specificity */
/* This method keeps the extra specificity (overriding the reset) */
.flow > *:where(:not(:first-child)) { 
    margin-top: var(--flow-space, 1rem);
}

.container {
    padding: 0 2em;
    /* Gör samma sak */
    /* padding-inline: 2em; */
    margin: 0 auto;
    /* Gör samma sak */
    /* margin-inline: auto; */
    max-width: 80rem;
}

.grid-container {
    display: grid;
    text-align: center;
    padding-inline: 1rem;
    /* setting max-width below places everyting to the left. using place-items: center undoes that */
    place-items: center;
    /* if using place content instead they would be stuck together centered vertically ond horizontally */
    /* Could be fixed with row gap */
}

.grid-container * {
    max-width: 50ch;
}

@media (min-width: 45rem) {
    .grid-container {
        /* gives 2 em padding on the sides and a min width of 0, max 80rem. This container holds the text */
        /* grid-template-columns: 2em minmax(0, 80rem) 2em; */
        /* this way there are 2 columns (max 40rem each) */
        grid-template-columns: minmax(2rem, 1fr) repeat(2, minmax(0, 40rem)) minmax(2rem, 1fr);
        column-gap: var(--container-gap, 2rem);
        text-align: left;
    }
    .grid-container > *:first-child {
        grid-column: 2;
    }
    
    .grid-container > *:last-child {
        grid-column: 3;
    }

    .grid-container--home {
        align-items: end;
        /* if on a really big screen it will chose the largest unit (20vh) and keep it from being
        pushed to far down on the creen */
        padding-bottom: max(6rem, 20vh);
    }
}


.sr-only {
    position: absolute;
    width: 1px;
    height: 1px;
    padding: 0;
    margin: -1px;
    overflow: hidden;
    clip: rect(0, 0, 0, 0);
    white-space: nowrap;
    border: 0;
}

/* Colors */

.bg-dark { background-color: hsl( var(--clr-dark) );}
.bg-accent { background-color: hsl( var(--clr-light) );}
.bg-white { background-color: hsl( var(--clr-white) );}

.text-dark { color: hsl( var(--clr-dark) );}
.text-accent { color: hsl( var(--clr-light) );}
.text-white { color: hsl( var(--clr-white ) );}

/* typography */

.ff-serif { font-family: var(--ff-serif); }
.ff-sans-cond { font-family: var(--ff-sans-cond); }
.ff-sans-normal { font-family: var(--ff-sans-normal); }

.letter-spacing-1 { letter-spacing: 4.75px; }
.letter-spacing-2 { letter-spacing: 2.7px; }
.letter-spacing-3 { letter-spacing: 2.35px; }

.uppercase { text-transform: uppercase; }

.fs-900 { font-size: var(--fs-900); }
.fs-800 { font-size: var(--fs-800); }
.fs-700 { font-size: var(--fs-700); }
.fs-600 { font-size: var(--fs-600); }
.fs-500 { font-size: var(--fs-500); }
.fs-400 { font-size: var(--fs-400); }
.fs-300 { font-size: var(--fs-300); }
.fs-200 { font-size: var(--fs-200); }

.fs-900,
.fs-800,
.fs-700,
.fs-600 {
    line-height: 1.1;
}

.numbered-title {
    font-family: var(--ff-sans-cond);
    font-size: var(--fs-500);
    text-transform: uppercase;
    letter-spacing: 4.62px;
}

.numbered-title span {
    margin-right: .5em;
    font-weight: 700;
    color: hsl( var(--clr-white ) / .25 );
}

/* --------------------- */
/* Components            */
/* --------------------- */

.large-button {
    position: relative;
    display: inline-grid;
    z-index: 1;
    /* Using display: grid allows us to use "place-items" or "place-content" */
    place-items: center;
    font-size: 2rem;
    padding: 0 2em;
    border-radius: 50%;
    /* aspect ratio of one will turn it into a perfect square. 1 = 1 / 1, to change ratios use 1 / 2 etc. */
    aspect-ratio: 1;
    text-decoration: none;
}

.large-button::after {
    content: '';
    position: absolute;
    z-index: -1;
    background-color: hsl( var(--clr-white ) / .15 );
    opacity: 0;
    width: 100%;
    height: 100%;
    border-radius: 50%;
    transition: opacity 500ms linear, transform 500ms ease-in-out;
}

/* animate */
.large-button:hover::after,
.large-button:focus::after {
    transform: scale(1.5);
    opacity: 1;
}

/* Primary header */

.logo {
    /* top and bottom margin will not move, only left end right */
    margin: 1.5rem clamp(1.5rem, 5vw, 3.5rem);
}

.primary-header {
    justify-content: space-between;
    align-items: center;
}

.primary-navigation {
    --underline-gap: 2rem;
    list-style: none;
    padding: 0;
    margin: 0;
/* Create glassmorhism effect */
/*     background: hsl( var(--clr-white ) / .05 );
    backdrop-filter: blur( 1.5rem ); */
/*     -webkit-backdrop-filter: blur( 1.5rem ); */
    background: hsl( var(--clr-dark) / .95 );
}

.primary-navigation a {
    color: hsl( var(--clr-white) / .5);
    text-decoration: none;
    font-size: var(--fs-300);
    font-family: var(--ff-sans-cond);
}

.primary-navigation a > span {
    color: hsl( var(--clr-white ) / 1 );
    font-weight: 700;
    margin-right: .5em;
}

.mobile-nav-toggle {
    display: none;
}

/* gives the blur effect only in browsers that supports it */
@supports (backdrop-filter: blur( 1.5rem )){
    .primary-navigation {
        background: hsl( var(--clr-white ) / .05 );
        backdrop-filter: blur( 1.5rem );
    }
}

@media (max-width: 35rem) {
    .primary-navigation {
        --underline-gap: .5rem;
        position: fixed;
        /* inset controls it's position on the screen */
        inset: 0 0 0 30%;
        z-index: 1000;
        padding: min(20rem, 15vh) 2rem;
        flex-direction: column;
        /* Pushes the menu off to the side off the screen */
        transform: translateX(100%);
        /* add animation to menu */
        transition: transform 500ms ease-in-out;
    }

    .primary-navigation[data-visible="true"] {
        transform: translateX(0);
    }

    /* only removes the border on .active, could use > * instead but not necessary since it won't be seen anyway w/ touch */
    .primary-navigation.underline-indicators > .active {
        border: 0;
    }

    .mobile-nav-toggle {
        display: block;
        position: absolute;
        z-index: 2000;
        right: 1rem;
        top: 2rem;
        background: transparent;
        background-image: url(./assets/shared/icon-hamburger.svg);
        background-position: center;
        background-repeat: no-repeat;
        width: 1.5rem;
        aspect-ratio: 1;
        border: 0;
    }

    .mobile-nav-toggle[aria-expanded="true"] {
        background-image: url(./assets/shared/icon-close.svg);
    }

    .mobile-nav-toggle:focus-visible {
        outline: 5px solid white;
        outline-offset: 5px;
    }
}

@media (min-width: 35em) and (max-width: 45em) {
    .primary-navigation {
        padding-inline: 3rem;
    }

    .primary-navigation a > span {
        display: none;
    }
}

.underline-indicators > * {
    cursor: pointer;
    padding: var(--underline-gap, 1rem) 0;
    border: 0;
    border-bottom: .2rem solid hsl( var(--clr-white) / 0);
}

.underline-indicators > *:hover,
.underline-indicators > *:focus {
    border-color: hsl( var(--clr-white) / .5);
}

.underline-indicators > .active,
.underline-indicators > [aria-selected="true"] {
    color: hsl( var(--clr-white ) / 1);
    border-color: hsl( var(--clr-white) / 1);
}

.tab-list {
    --gap: 2rem;
}

.dot-indicators > * {
    cursor: pointer;
    border: 0;
    border-radius: 50%;
    aspect-ratio: 1;
    padding: .5em;
    background-color: hsl( var(--clr-white ) / .25 );
}

.dot-indicators > *:hover,
.dot-indicators > *:focus {
    background-color: hsl( var(--clr-white) / .5);
}

.dot-indicators > [aria-selected="true"] {
    background-color: hsl( var(--clr-white ) / 1);
}

.number-indicators {
    display: inline-grid;
}

.number-indicators > * {
    cursor: pointer;
    background-color: hsl( var(--clr-dark) );
    color: hsl( var(--clr-white ) );
    padding: 0 1rem;
    border: .1rem solid hsl( var(--clr-white ) / .25 );
    border-radius: 50%;
    aspect-ratio: 1;
}

.number-indicators > *:hover,
.number-indicators > *:focus {
    border-color: hsl( var(--clr-white) / 1 );
}

.number-indicators > [aria-selected="true"] {
    background-color: hsl( var(--clr-white ) );
    color: hsl( var(--clr-dark) );
}

/* ------------------------- */
/* Page specific background  */
/* ------------------------- */

body {
    background-size: cover;
    background-position: bottom center;
}

/* home */

.home {
    background-image: url(./assets/home/background-home-mobile.jpg);
}

@media (min-width: 35rem) {
    .home {
        background-image: url(./assets/home/background-home-tablet.jpg);
        background-position: center center;
    }
}

@media (min-width: 45rem) {
    .home {
        background-image: url(./assets/home/background-home-desktop.jpg);
    }
}